// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

// $QandA-primary: mat.define-palette(mat.$indigo-palette);
// $QandA-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// // The warn palette is optional (defaults to red).
// $QandA-warn: mat.define-palette(mat.$red-palette);


/* For use in src/lib/core/theming/_palette.scss */
$primary: (
    50 : #f8ebe8,
    100 : #efccc5,
    200 : #e4aa9e,
    300 : #d98877,
    400 : #d06f5a,
    500 : #c8553d,
    600 : #c24e37,
    700 : #bb442f,
    800 : #b43b27,
    900 : #a72a1a,
    A100 : #ffe0dd,
    A200 : #ffb2aa,
    A400 : #ff8477,
    A700 : #ff6d5d,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

$accent: (
    50 : #ebf1f1,
    100 : #cddcdc,
    200 : #acc5c5,
    300 : #8aaeae,
    400 : #719c9c,
    500 : #588b8b,
    600 : #508383,
    700 : #477878,
    800 : #3d6e6e,
    900 : #2d5b5b,
    A100 : #a6ffff,
    A200 : #73ffff,
    A400 : #40ffff,
    A700 : #26ffff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

$warn: (
    50 : #ffeeed,
    100 : #ffd4d3,
    200 : #ffb7b6,
    300 : #ff9a98,
    400 : #ff8482,
    500 : #ff6e6c,
    600 : #ff6664,
    700 : #ff5b59,
    800 : #ff514f,
    900 : #ff3f3d,
    A100 : #ffffff,
    A200 : #ffffff,
    A400 : #ffe6e5,
    A700 : #ffcccc,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #000000,
        700 : #000000,
        800 : #000000,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);


$QandA-primary: mat.define-palette($primary);
$QandA-accent: mat.define-palette($accent);
$QandA-warn: mat.define-palette($warn);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$QandA-light-theme: mat.define-light-theme((
  color: (
    primary: $QandA-primary,
    accent: $QandA-accent,
    warn: $QandA-warn,
  )
));

$QandA-dark-theme: mat.define-dark-theme((
  color: (
    primary: $QandA-primary,
    accent: $QandA-accent,
    warn: $QandA-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
.light-theme {
  @include mat.all-component-themes($QandA-light-theme);
}

.dark-theme {
  @include mat.all-component-themes($QandA-dark-theme);
}